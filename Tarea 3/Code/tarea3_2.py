# -*- coding: utf-8 -*-
"""Tarea3.2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LmLqkoDbiG19eZs2QlSE3cs-0vcnErHa

# Implementación Regresión Logística con librerias sklearn

2. Correr el ejemplo con los datos del csv en la carpeta semana 6  con la función de sklearn:​ •https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html y comparar.
"""

from sklearn.datasets import load_iris
from sklearn.linear_model import LogisticRegression
import pandas as pd
import matplotlib 
import matplotlib.pyplot as plt
import seaborn as sb


data= pd.read_csv('data_classification.csv', sep = ';')
data.head(10)
X = data[['suenio','estudio']].values
y = data['pasan'].values

clf=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=200,
                   multi_class='auto', n_jobs=None, penalty='none',
                   random_state=0, solver='newton-cg', tol=0.0001, verbose=0,
                   warm_start=False)

clf.fit(X, y)

clf.predict(X[:3, :])

clf.predict_proba(X[:3, :])

clf.score(X, y)

"""Cómo podemos observar los resultados son muy similares, lo cuál indica ques muy válido usas cualquiera de las dos formas, aún así hacer uso de las librerias de scikit learn brindan maypr facilidad a la hora de desarrolar los ejercicios y dejan a la primerqa implementación como un ejercicio netamente académico."""