# -*- coding: utf-8 -*-
"""R_Cuadrado_Resistencia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hK4YiEO4SEBSq0fKQvewTAqf5BuWFRfX
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

"""# Iniciemos con  la regresi√≥n lineal univariada"""

x1=np.array([1, 1.5, 2, 2.5, 3, 3.5 , 4, 4.5, 5, 5.5, 6])
x0=np.ones(x1.shape)
y=np.array([0.16,0.28,0.38,0.47,0.60,0.73,0.79,0.87,0.84,0.86,0.96])
X=np.matrix([x0,x1]).T
Y=np.matrix([y]).T
print("shape x0",x0.shape,"shape x1",x1.shape,"shape X",X.shape,"shape Y",Y.shape)
print(X)
print(Y)

Theta=np.linalg.inv(X.T*X)*(X.T)*Y
print(Theta)
plt.plot(x1,y, 'bo')
plt.plot(x1,Theta[0,0]+Theta[1,0]*x1)
plt.title("Final")
plt.show()

y_est=x0*Theta[0,0]+x1*Theta[1,0]
print(y_est)
varianza=y.var()
#print(varianza)
R0 = np.sum( np.power( ( y_est-varianza ) ,2) )
R1 = np.sum( np.power( ( y-varianza ) ,2) )
R2 = R0/R1
print("R cuadrado = ",R2)